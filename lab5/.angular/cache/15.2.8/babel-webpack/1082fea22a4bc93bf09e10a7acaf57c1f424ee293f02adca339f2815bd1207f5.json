{"ast":null,"code":"import { Department } from '../models/department';\nimport * as i0 from \"@angular/core\";\nexport class DepartmentService {\n  constructor() {\n    this.departments = [new Department(1, 'department 1', 'location 1'), new Department(2, 'department 2', 'location 2'), new Department(3, 'department 3', 'location 3'), new Department(4, 'department 4', 'location 4')];\n  }\n  getDepartments() {\n    return this.departments;\n  }\n  getDepartment(id) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) return this.departments[i];\n    }\n    return null;\n  }\n  addDepartment(department) {\n    this.departments.push(department);\n  }\n  removeDepartment(id) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept) {\n    this.departments.forEach((d, i) => {\n      if (d.id == dept?.id) {\n        this.departments[i].Name = dept.Name;\n        this.departments[i].Location = dept.Location;\n      }\n    });\n  }\n}\nDepartmentService.ɵfac = function DepartmentService_Factory(t) {\n  return new (t || DepartmentService)();\n};\nDepartmentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DepartmentService,\n  factory: DepartmentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;AAIjD,OAAM,MAAOC,iBAAiB;EAC5BC;IACA,gBAAW,GAAiB,CAC1B,IAAIF,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,CAChD;EANc;EAOfG,cAAc;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EACAC,aAAa,CAACC,EAAU;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAChD,IAAI,IAAI,CAACH,WAAW,CAACG,CAAC,CAAC,CAACD,EAAE,IAAIA,EAAE,EAAE,OAAO,IAAI,CAACF,WAAW,CAACG,CAAC,CAAC;;IAE9D,OAAO,IAAI;EACb;EACAE,aAAa,CAACC,UAAsB;IAClC,IAAI,CAACN,WAAW,CAACO,IAAI,CAACD,UAAU,CAAC;EACnC;EACAE,gBAAgB,CAACN,EAAU;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAChD,IAAI,IAAI,CAACH,WAAW,CAACG,CAAC,CAAC,CAACD,EAAE,IAAIA,EAAE,EAAE,IAAI,CAACF,WAAW,CAACS,MAAM,CAACN,CAAC,EAAE,CAAC,CAAC;;EAEnE;EACAO,cAAc,CAACC,IAAuB;IACpC,IAAI,CAACX,WAAW,CAACY,OAAO,CAAC,CAACC,CAAC,EAAEV,CAAC,KAAI;MAChC,IAAIU,CAAC,CAACX,EAAE,IAAIS,IAAI,EAAET,EAAE,EAAE;QACpB,IAAI,CAACF,WAAW,CAACG,CAAC,CAAC,CAACW,IAAI,GAAGH,IAAI,CAACG,IAAI;QACpC,IAAI,CAACd,WAAW,CAACG,CAAC,CAAC,CAACY,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;;IAEhD,CAAC,CAAC;EACJ;;AAhCWlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAmB,SAAjBnB,iBAAiB;EAAAoB,YAFhB;AAAM","names":["Department","DepartmentService","constructor","getDepartments","departments","getDepartment","id","i","length","addDepartment","department","push","removeDepartment","splice","editDepartment","dept","forEach","d","Name","Location","factory","providedIn"],"sourceRoot":"","sources":["D:\\iti 9 months scholarship program\\labs\\Angular\\lab5\\src\\app\\Services\\department.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Department } from '../models/department';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DepartmentService {\n  constructor() {}\n  departments: Department[] = [\n    new Department(1, 'department 1', 'location 1'),\n    new Department(2, 'department 2', 'location 2'),\n    new Department(3, 'department 3', 'location 3'),\n    new Department(4, 'department 4', 'location 4'),\n  ];\n  getDepartments(): Department[] {\n    return this.departments;\n  }\n  getDepartment(id: number): Department | null {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) return this.departments[i];\n    }\n    return null;\n  }\n  addDepartment(department: Department) {\n    this.departments.push(department);\n  }\n  removeDepartment(id: number) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept: Department | null) {\n    this.departments.forEach((d, i) => {\n      if (d.id == dept?.id) {\n        this.departments[i].Name = dept.Name;\n        this.departments[i].Location = dept.Location;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}