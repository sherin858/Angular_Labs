{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DepartmentService {\n  constructor(http) {\n    this.http = http;\n    // departments: Department[] = [\n    //   new Department(1, 'department 1', 'location 1'),\n    //   new Department(2, 'department 2', 'location 2'),\n    //   new Department(3, 'department 3', 'location 3'),\n    //   new Department(4, 'department 4', 'location 4'),\n    // ];\n    this.baseUrl = 'https://localhost:7010/api/departmets/';\n  }\n  getDepartments() {\n    // return this.departments;\n    return this.http.get(this.baseUrl);\n  }\n  getDepartment(id) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) return this.departments[i];\n    }\n    return null;\n  }\n  addDepartment(department) {\n    this.departments.push(department);\n  }\n  removeDepartment(id) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept) {\n    this.departments.forEach((d, i) => {\n      if (d.id == dept?.id) {\n        this.departments[i].Name = dept.Name;\n        this.departments[i].Location = dept.Location;\n      }\n    });\n  }\n}\nDepartmentService.ɵfac = function DepartmentService_Factory(t) {\n  return new (t || DepartmentService)(i0.ɵɵinject(i1.HttpClient));\n};\nDepartmentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DepartmentService,\n  factory: DepartmentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB;IACA;IACA;IACA;IACA;IACA;IACA,YAAO,GAAW,wCAAwC;EAPnB;EAQvCC,cAAc;IACZ;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,IAAI,CAACC,OAAO,CAAC;EAClD;EACAC,aAAa,CAACC,EAAU;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChD,IAAI,IAAI,CAACC,WAAW,CAACD,CAAC,CAAC,CAACD,EAAE,IAAIA,EAAE,EAAE,OAAO,IAAI,CAACE,WAAW,CAACD,CAAC,CAAC;;IAE9D,OAAO,IAAI;EACb;EACAG,aAAa,CAACC,UAAsB;IAClC,IAAI,CAACH,WAAW,CAACI,IAAI,CAACD,UAAU,CAAC;EACnC;EACAE,gBAAgB,CAACP,EAAU;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChD,IAAI,IAAI,CAACC,WAAW,CAACD,CAAC,CAAC,CAACD,EAAE,IAAIA,EAAE,EAAE,IAAI,CAACE,WAAW,CAACM,MAAM,CAACP,CAAC,EAAE,CAAC,CAAC;;EAEnE;EACAQ,cAAc,CAACC,IAAuB;IACpC,IAAI,CAACR,WAAW,CAACS,OAAO,CAAC,CAACC,CAAC,EAAEX,CAAC,KAAI;MAChC,IAAIW,CAAC,CAACZ,EAAE,IAAIU,IAAI,EAAEV,EAAE,EAAE;QACpB,IAAI,CAACE,WAAW,CAACD,CAAC,CAAC,CAACY,IAAI,GAAGH,IAAI,CAACG,IAAI;QACpC,IAAI,CAACX,WAAW,CAACD,CAAC,CAAC,CAACa,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;;IAEhD,CAAC,CAAC;EACJ;;AAlCWrB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAsB,SAAjBtB,iBAAiB;EAAAuB,YAFhB;AAAM","names":["DepartmentService","constructor","http","getDepartments","get","baseUrl","getDepartment","id","i","departments","length","addDepartment","department","push","removeDepartment","splice","editDepartment","dept","forEach","d","Name","Location","factory","providedIn"],"sourceRoot":"","sources":["D:\\iti 9 months scholarship program\\labs\\Angular\\lab5\\src\\app\\Services\\department.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Department } from '../models/department';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DepartmentService {\n  constructor(private http: HttpClient) {}\n  // departments: Department[] = [\n  //   new Department(1, 'department 1', 'location 1'),\n  //   new Department(2, 'department 2', 'location 2'),\n  //   new Department(3, 'department 3', 'location 3'),\n  //   new Department(4, 'department 4', 'location 4'),\n  // ];\n  baseUrl: string = 'https://localhost:7010/api/departmets/';\n  getDepartments() {\n    // return this.departments;\n    return this.http.get<Department[]>(this.baseUrl);\n  }\n  getDepartment(id: number): Department | null {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) return this.departments[i];\n    }\n    return null;\n  }\n  addDepartment(department: Department) {\n    this.departments.push(department);\n  }\n  removeDepartment(id: number) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept: Department | null) {\n    this.departments.forEach((d, i) => {\n      if (d.id == dept?.id) {\n        this.departments[i].Name = dept.Name;\n        this.departments[i].Location = dept.Location;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}