{"ast":null,"code":"import { Department } from '../models/department';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DepartmentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7010/api/Department/';\n    this.departments = [new Department(1, 'department 1', 'location 1'), new Department(2, 'department 2', 'location 2'), new Department(3, 'department 3', 'location 3'), new Department(4, 'department 4', 'location 4')];\n  }\n  getDepartments() {\n    //return this.departments;\n    return this.http.get(this.baseUrl);\n  }\n  getDepartment(id) {\n    // for (let i = 0; i < this.departments.length; i++) {\n    //   if (this.departments[i].id == id) return this.departments[i];\n    // }\n    // return null;\n    return this.http.get(this.baseUrl + id);\n  }\n  addDepartment(department) {\n    // this.departments.push(department);\n    return this.http.post(this.baseUrl, department);\n  }\n  removeDepartment(id) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept) {\n    // this.departments.forEach((d, i) => {\n    //   if (d.id == dept?.id) {\n    //     this.departments[i].name = dept.name;\n    //     this.departments[i].location = dept.location;\n    //   }\n    // });\n    return this.http.put(this.baseUrl + dept?.id, dept);\n  }\n}\nDepartmentService.ɵfac = function DepartmentService_Factory(t) {\n  return new (t || DepartmentService)(i0.ɵɵinject(i1.HttpClient));\n};\nDepartmentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DepartmentService,\n  factory: DepartmentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;;AAKjD,OAAM,MAAOC,iBAAiB;EAE5BC,YAAmBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADvB,YAAO,GAAW,wCAAwC;IAE1D,gBAAW,GAAiB,CAC1B,IAAIH,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,EAC/C,IAAIA,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,YAAY,CAAC,CAChD;EANqC;EAOtCI,cAAc;IACZ;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,IAAI,CAACC,OAAO,CAAC;EAClD;EACAC,aAAa,CAACC,EAAU;IACtB;IACA;IACA;IACA;IACA,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,OAAO,GAAGE,EAAE,CAAC;EACrD;EACAC,aAAa,CAACC,UAAsB;IAClC;IACA,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACL,OAAO,EAAEI,UAAU,CAAC;EACjD;EACAE,gBAAgB,CAACJ,EAAU;IACzB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChD,IAAI,IAAI,CAACC,WAAW,CAACD,CAAC,CAAC,CAACL,EAAE,IAAIA,EAAE,EAAE,IAAI,CAACM,WAAW,CAACE,MAAM,CAACH,CAAC,EAAE,CAAC,CAAC;;EAEnE;EACAI,cAAc,CAACC,IAAuB;IACpC;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAC,IAAI,CAACb,OAAO,GAAGY,IAAI,EAAEV,EAAE,EAAEU,IAAI,CAAC;EACrD;;AArCWjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAmB,SAAjBnB,iBAAiB;EAAAoB,YAFhB;AAAM","names":["Department","DepartmentService","constructor","http","getDepartments","get","baseUrl","getDepartment","id","addDepartment","department","post","removeDepartment","i","departments","length","splice","editDepartment","dept","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\iti 9 months scholarship program\\labs\\Angular\\lab5\\src\\app\\Services\\department.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Department } from '../models/department';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DepartmentService {\n  baseUrl: string = 'https://localhost:7010/api/Department/';\n  constructor(public http: HttpClient) {}\n  departments: Department[] = [\n    new Department(1, 'department 1', 'location 1'),\n    new Department(2, 'department 2', 'location 2'),\n    new Department(3, 'department 3', 'location 3'),\n    new Department(4, 'department 4', 'location 4'),\n  ];\n  getDepartments() {\n    //return this.departments;\n    return this.http.get<Department[]>(this.baseUrl);\n  }\n  getDepartment(id: number) {\n    // for (let i = 0; i < this.departments.length; i++) {\n    //   if (this.departments[i].id == id) return this.departments[i];\n    // }\n    // return null;\n    return this.http.get<Department>(this.baseUrl + id);\n  }\n  addDepartment(department: Department) {\n    // this.departments.push(department);\n    return this.http.post(this.baseUrl, department);\n  }\n  removeDepartment(id: number) {\n    for (let i = 0; i < this.departments.length; i++) {\n      if (this.departments[i].id == id) this.departments.splice(i, 1);\n    }\n  }\n  editDepartment(dept: Department | null) {\n    // this.departments.forEach((d, i) => {\n    //   if (d.id == dept?.id) {\n    //     this.departments[i].name = dept.name;\n    //     this.departments[i].location = dept.location;\n    //   }\n    // });\n    return this.http.put(this.baseUrl + dept?.id, dept);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}